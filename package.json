{
  "name": "shift-app-expo",
  "main": "expo-router/entry",
  "version": "1.0.0",
  "scripts": {
    "start": "expo start",
    "reset-project": "node ./scripts/reset-project.js",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "test": "jest --watchAll",
    "test:coverage": "jest --coverage",
    "unit:tests": "jest --coverage",
    "lint": "expo lint",
    "compile": "tsc",
    "db:start": "npx supabase start",
    "db:backup:migrate": "echo 'Generating migration file...' && npx supabase db diff --local -f migrate_file && echo 'Migration file created' && LATEST=$(ls -1 supabase/migrations/*_migrate_file.sql | sort | tail -1) && echo 'Processing latest migration: '$LATEST && if [ -f \"$LATEST\" ] && ! grep -q 'session_replication_role = replica' \"$LATEST\"; then echo 'Adding replication role setting...' && echo 'SET session_replication_role = replica;' | cat - \"$LATEST\" > temp && mv temp \"$LATEST\" && echo 'Replication role setting added'; else echo 'Replication role setting already exists, skipping'; fi && echo 'Migration backup complete'",
    "db:backup:seed": "echo 'Starting seed data backup...' && TIMESTAMP=$(date +%Y%m%d%H%M%S) && echo 'Using timestamp: '$TIMESTAMP && npx supabase db dump --local --data-only --file=supabase/db/${TIMESTAMP}_seed.sql && echo 'Seed data dumped to file' && if ! grep -q 'session_replication_role = replica' supabase/db/${TIMESTAMP}_seed.sql; then echo 'Adding replication role setting...' && echo 'SET session_replication_role = replica;' | cat - supabase/db/${TIMESTAMP}_seed.sql > temp && mv temp supabase/db/${TIMESTAMP}_seed.sql && echo 'Replication role setting added'; else echo 'Replication role setting already exists, skipping'; fi && echo 'Seed backup complete'",
    "db:backup:migrate-seed": "npm run db:backup:migrate && npm run db:backup:seed",
    "db:backup:full": "echo 'Starting full database backup...' && TIMESTAMP=$(date +%Y%m%d%H%M%S) && echo 'Using timestamp: '$TIMESTAMP && echo 'Backing up schema...' && npx supabase db dump --local -f supabase/db/${TIMESTAMP}_schema_backup.sql && echo 'Schema backup complete' && echo 'Backing up data...' && npx supabase db dump --local --data-only --use-copy -f supabase/db/${TIMESTAMP}_data_backup.sql && echo 'Data backup complete' && echo 'Full backup process completed successfully'",
    "db:load:full": "echo 'Starting full database restore...' && echo 'Resetting database...' && npx supabase db reset && echo 'Database reset complete' && echo 'Identifying latest backup files...' && SCHEMA_FILE=$(ls -1 supabase/db/*_schema_backup.sql | sort | tail -1) && DATA_FILE=$(ls -1 supabase/db/*_data_backup.sql | sort | tail -1) && echo 'Loading schema from: '$SCHEMA_FILE && echo 'Loading data from: '$DATA_FILE && echo 'Importing schema and data...' && cat $SCHEMA_FILE $DATA_FILE | PGPASSWORD=postgres psql -h localhost -U postgres -p 64322 -d postgres && echo 'Database restore completed successfully'",
    "db:load:full:win": "powershell -Command \"Write-Host 'Starting restore...'; npx supabase db reset; $SCHEMA_FILE = (Get-ChildItem supabase\\db\\*_schema_backup.sql | Sort-Object LastWriteTime -Descending | Select -First 1).FullName; $DATA_FILE = (Get-ChildItem supabase\\db\\*_data_backup.sql | Sort-Object LastWriteTime -Descending | Select -First 1).FullName; Get-Content $SCHEMA_FILE | docker exec -i supabase_db_shift-app-expo psql -U postgres postgres; Get-Content $DATA_FILE | docker exec -i supabase_db_shift-app-expo psql -U postgres postgres; Write-Host 'Done!';\"",
    "db:delete:docker": "echo 'Checking Supabase status...' && (docker ps -q --filter \"name=supabase_*_shift-app-expo\" > /dev/null && echo 'Stopping running Supabase containers...' && supabase stop --no-backup || echo 'No running Supabase containers found') && echo 'Removing any existing Supabase containers...' && (docker ps -a -q --filter \"name=supabase_*_shift-app-expo\" | xargs -r docker rm -f || echo 'No containers to remove') && echo 'Removing any existing Supabase volumes...' && (docker volume ls -q --filter \"label=com.supabase.cli.project=shift-app-expo\" | xargs -r docker volume rm || echo 'No volumes to remove') && echo 'Cleanup completed successfully'",
    "db:stop": "npx supabase stop",
    "db:status": "npx supabase status",
    "db:reset": "npx supabase db reset"
  },
  "jest": {
    "preset": "jest-expo"
  },
  "dependencies": {
    "@expo/cli": "^0.22.26",
    "@expo/vector-icons": "^14.0.4",
    "@react-native-async-storage/async-storage": "1.23.1",
    "@react-native-community/datetimepicker": "8.2.0",
    "@react-native-picker/picker": "2.9.0",
    "@react-navigation/bottom-tabs": "7.2.0",
    "@react-navigation/native": "7.1.x",
    "@react-navigation/stack": "7.1.2",
    "@supabase/supabase-js": "^2.49.8",
    "babel-jest": "^30.0.2",
    "babel-preset-expo": "^13.2.1",
    "expo": "^52.0.46",
    "expo-blur": "~14.0.2",
    "expo-constants": "^17.0.8",
    "expo-font": "^13.0.4",
    "expo-haptics": "~14.0.1",
    "expo-image": "^2.0.7",
    "expo-image-picker": "~16.0.6",
    "expo-linking": "~7.0.4",
    "expo-router": "^4.0.21",
    "expo-secure-store": "~14.0.1",
    "expo-splash-screen": "^0.29.24",
    "expo-status-bar": "~2.0.1",
    "expo-symbols": "^0.2.2",
    "expo-system-ui": "^4.0.9",
    "expo-web-browser": "~14.0.2",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-native": "^0.76.9",
    "react-native-calendars": "~1.1308.1",
    "react-native-elements": "^3.4.3",
    "react-native-gesture-handler": "~2.20.2",
    "react-native-reanimated": "~3.16.1",
    "react-native-safe-area-context": "4.12.0",
    "react-native-screens": "~4.4.0",
    "react-native-url-polyfill": "^2.0.0",
    "react-native-web": "~0.19.13",
    "react-native-webview": "13.12.5"
  },
  "devDependencies": {
    "@babel/core": "7.25.2",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-native": "^13.2.0",
    "@types/jest": "^29.5.14",
    "@types/react": "~18.3.12",
    "@types/react-test-renderer": "18.3.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "jest": "^29.7.0",
    "jest-expo": "^52.0.6",
    "react-test-renderer": "18.3.1",
    "supabase": "^2.15.8",
    "typescript": "5.3.3"
  },
  "private": true
}
